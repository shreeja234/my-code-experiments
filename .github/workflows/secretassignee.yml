name: Assign Jira Issues

on:
  workflow_dispatch:

jobs:
  auto_assign:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Assign unassigned Jira issues
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          PROJECT_KEY: ${{ secrets.PROJECT_KEY }}
        run: |
          # Fetch unassigned issues
          RESPONSE=$(curl -u $JIRA_USERNAME:$JIRA_API_TOKEN \
            -X GET \
            -H "Content-Type: application/json" \
            "$JIRA_BASE_URL/rest/api/3/search?jql=assignee=null")

          # Output the response for debugging
          echo "Jira API response: $RESPONSE"

          # Save the response to issues.json
          echo "$RESPONSE" > issues.json

          # Check if issues.json contains any issues
          if jq -e '.issues | length == 0' issues.json > /dev/null; then
            echo "No unassigned issues found."
            exit 0
          fi

          # Extract issue keys
          ISSUE_KEYS=$(jq -r '.issues[].key' issues.json)

          # Assign issues
          for ISSUE_KEY in $ISSUE_KEYS; do
            echo "Assigning issue $ISSUE_KEY to $ASSIGNEE"
            ASSIGN_RESPONSE=$(curl -u $JIRA_USERNAME:$JIRA_API_TOKEN \
              -X PUT \
              -H "Content-Type: application/json" \
              -d "{\"fields\":{\"assignee\":{\"id\":\"712020:b2c12845-526d-4d33-9799-86e886786b8a\"}}}" \
              "$JIRA_BASE_URL/rest/api/3/issue/$ISSUE_KEY")

            # Output the assign response for debugging
            echo "Assign response: $ASSIGN_RESPONSE"
          done
